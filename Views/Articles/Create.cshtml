@model SellMyStuff.Models.Article

@{
    ViewBag.Title = "Create";
}

<h2>Create new Product</h2>

@using (Html.BeginForm("Create", "Articles", null, FormMethod.Post, new { enctype = "multipart/form-data" }))

{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.ArticlesGroupId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ArticlesGroupId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ArticlesGroupId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            
            @Html.TextAreaFor(model => model.Description, new { @class = "form-control" } )
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StockQty, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StockQty, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.StockQty, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Colour, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.DropDownList("Colour", new MultiSelectList(Enum.GetValues(typeof(SellMyStuff.Enums.Colour))), " Select", new { @class = "form-control" })*@
            @Html.DropDownList("Colour", new SelectList(Enum.GetValues(typeof(SellMyStuff.Enums.Colour))), "Please Select Colour", new { @class = "form-control" })
        </div>
    </div>


    <div class="form-group">

        <label class="control-label col-md-2">Photos</label>
        <div class="col-md-10 editor-field" id='filecontainer'>

            <input type="file" class="dimmy" id="image-input" name="files[]" multiple="multiple" />

        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2"></label>
        <div class="preview-area col-md-10"> </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>

</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
